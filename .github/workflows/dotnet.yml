name: .NET

on:
  push:
    branches: [ dna-tls-patch ]
  pull_request:
    branches: [ dna-tls-patch ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.1.x
    - name: Restore dependencies
      run: dotnet restore Npgsql.sln
    - name: Build Npgsql.dll
      run: dotnet build /p:Platform=x86 -c ReleaseOptimizedCryptography src/Npgsql/Npgsql.csproj
    ## tests are currently disabled as they will require postgres to be installed
    ## and running. Not that hard but probably not needed as our changes are minimal
    #- name: Test
    #  run: dotnet test Npgsql.sln --no-build --verbosity normal
    - name: Build release file
      run: zip -r Npgsql.zip src/Npgsql/bin/x86/ReleaseOptimizedCryptography/netstandard2.0
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./Npgsql.zip
        asset_name: Npgsql.zip
        asset_content_type: application/zip
